sudo: true
dist: xenial

git:
  depth: false

language: bash

jobs:
  allow_failures:
    - script: make test/gke/deploy/elk
  fast_finish: true
  include:
    - stage: test
      name: "Integration test - no ELK"
      if: type = pull_request
      env:
        - CHARTS_PATH=/home/travis/build/vanvalenlab/kiosk/conf/charts
        - CLOUD_PROVIDER=gke 
        - CLOUDSDK_BUCKET=deepcell-output-benchmarking
        - CLOUDSDK_COMPUTE_REGION=us-west1
        - CLOUDSDK_CONFIG=/home/travis/build/vanvalenlab/kiosk/.config/gcloud/
        - CLOUDSDK_CORE_PROJECT=deepcell-209717
        - CLOUDSDK_CORE_VERBOSITY=debug
        - CONF_PATH_PREFIX=/home/travis/build/vanvalenlab/kiosk
        - CONSUMER_MACHINE_TYPE=n1-highmem-2
        - GCP_PREDICTION_GPU_TYPE=nvidia-tesla-t4
        - GCP_TRAINING_GPU_TYPE=nvidia-tesla-v100
        - GKE_MACHINE_TYPE=n1-standard-1
        - GCP_SERVICE_ACCOUNT=continuous-integration-test@deepcell-209717.iam.gserviceaccount.com
        - GPU_MACHINE_TYPE=n1-highmem-2
        - GPU_MAX_DIVIDED_BY_FOUR=1
        - GPU_MAX_DIVIDED_BY_THREE=1
        - GPU_MAX_DIVIDED_BY_TWO=2
        - GPU_MAX_TIMES_FIFTY=200 
        - GPU_MAX_TIMES_FIVE=20
        - GPU_MAX_TIMES_FOUR=16
        - GPU_MAX_TIMES_FOURTY=160 
        - GPU_MAX_TIMES_ONE_HUNDRED=400 
        - GPU_MAX_TIMES_ONE_HUNDRED_FIFTY=600 
        - GPU_MAX_TIMES_SEVENTY_FIVE=300 
        - GPU_MAX_TIMES_TEN=40
        - GPU_MAX_TIMES_THIRTY=120 
        - GPU_MAX_TIMES_THREE=12
        - GPU_MAX_TIMES_TWENTY=80
        - GPU_MAX_TIMES_TWO=8
        - GPU_MAX_TIMES_TWO_HUNDRED=800 
        - GPU_NODE_MIN_SIZE=0
        - GPU_NODE_MAX_SIZE=4
        - GPU_PER_NODE=1
        - KUBERNETES_VERSION=latest
        - NODE_MIN_SIZE=1
        - NODE_MAX_SIZE=60
        - REGION_ZONES_WITH_GPUS=us-west1-a,us-west1-b
      before_install:
        - openssl aes-256-cbc -K $encrypted_84460f9bb44c_key -iv $encrypted_84460f9bb44c_iv -in .secrets/gcloud_key_base64.enc -out gcloud_key_base64 -d
        - cat gcloud_key_base64 | base64 --decode > gcloud_key.json
        - export PATH=/home/travis/build/vanvalenlab/kiosk:$PATH
      install:
        # Install helmfile
        - wget https://github.com/roboll/helmfile/releases/download/v0.82.0/helmfile_linux_amd64
        - chmod 764 $CONF_PATH_PREFIX/helmfile_linux_amd64
	    - mv helmfile_linux_amd64 helmfile
	    - helmfile --version
	    # Install gomplate
	    - wget https://github.com/hairyhenderson/gomplate/releases/download/v3.1.0/gomplate_linux-amd64-slim
	    - chmod 764 $CONF_PATH_PREFIX/gomplate_linux-amd64-slim
	    - mv gomplate_linux-amd64-slim gomplate
	    - gomplate --version
	    # Install kubectl
        - sudo apt-get update && sudo sudo apt-get install -y apt-transport-https
	    - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
	    - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
	    - sudo apt-get update
        - sudo apt-get install -y kubectl
	    - kubectl version --client
	    # Install kubens
	    - wget https://raw.githubusercontent.com/ahmetb/kubectx/master/kubens
	    - chmod 764 $CONF_PATH_PREFIX/kubens
	    # Install helm
	    - wget https://get.helm.sh/helm-v2.16.3-linux-amd64.tar.gz
	    - tar -xzvf helm-v2.16.3-linux-amd64.tar.gz
	    - chmod 764 $CONF_PATH_PREFIX/linux-amd64/helm
	    - mv $CONF_PATH_PREFIX/linux-amd64/helm $CONF_PATH_PREFIX/
	    - helm version -c
	    # Install gcloud
	    - sudo apt-get install apt-transport-https ca-certificates gnupg
	    - echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
	    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
	    - sudo apt-get update && sudo apt-get install google-cloud-sdk
	    - gcloud version
      script: make test/gke/deploy
    - stage: test
      name: "Integration test - with ELK"
      if: type = pull_request
      env:
        - CHARTS_PATH=/home/travis/build/vanvalenlab/kiosk/conf/charts
        - CLOUD_PROVIDER=gke 
        - CLOUDSDK_BUCKET=deepcell-output-benchmarking
        - CLOUDSDK_COMPUTE_REGION=us-west1
        - CLOUDSDK_CONFIG=/home/travis/build/vanvalenlab/kiosk/.config/gcloud/
        - CLOUDSDK_CORE_PROJECT=deepcell-209717
        - CLOUDSDK_CORE_VERBOSITY=debug
        - CONF_PATH_PREFIX=/home/travis/build/vanvalenlab/kiosk
        - CONSUMER_MACHINE_TYPE=n1-highmem-2
        - GCP_PREDICTION_GPU_TYPE=nvidia-tesla-t4
        - GCP_TRAINING_GPU_TYPE=nvidia-tesla-v100
        - GKE_MACHINE_TYPE=n1-standard-1
        - GCP_SERVICE_ACCOUNT=continuous-integration-test@deepcell-209717.iam.gserviceaccount.com
        - GPU_MACHINE_TYPE=n1-highmem-2
        - GPU_MAX_DIVIDED_BY_FOUR=1
        - GPU_MAX_DIVIDED_BY_THREE=1
        - GPU_MAX_DIVIDED_BY_TWO=2
        - GPU_MAX_TIMES_FIFTY=200 
        - GPU_MAX_TIMES_FIVE=20
        - GPU_MAX_TIMES_FOUR=16
        - GPU_MAX_TIMES_FOURTY=160 
        - GPU_MAX_TIMES_ONE_HUNDRED=400 
        - GPU_MAX_TIMES_ONE_HUNDRED_FIFTY=600 
        - GPU_MAX_TIMES_SEVENTY_FIVE=300 
        - GPU_MAX_TIMES_TEN=40
        - GPU_MAX_TIMES_THIRTY=120 
        - GPU_MAX_TIMES_THREE=12
        - GPU_MAX_TIMES_TWENTY=80
        - GPU_MAX_TIMES_TWO=8
        - GPU_MAX_TIMES_TWO_HUNDRED=800 
        - GPU_NODE_MIN_SIZE=0
        - GPU_NODE_MAX_SIZE=4
        - GPU_PER_NODE=1
        - KUBERNETES_VERSION=latest
        - NODE_MIN_SIZE=1
        - NODE_MAX_SIZE=60
        - REGION_ZONES_WITH_GPUS=us-west1-a,us-west1-b
      before_install:
        - openssl aes-256-cbc -K $encrypted_84460f9bb44c_key -iv $encrypted_84460f9bb44c_iv -in .secrets/gcloud_key_base64.enc -out gcloud_key_base64 -d
        - cat gcloud_key_base64 | base64 --decode > gcloud_key.json
        - export PATH=/home/travis/build/vanvalenlab/kiosk:/home/travis/build/vanvalenlab/kiosk/linux-amd64:$PATH
      install:
        # Install helmfile
        - wget https://github.com/roboll/helmfile/releases/download/v0.82.0/helmfile_linux_amd64
        - chmod 764 $CONF_PATH_PREFIX/helmfile_linux_amd64
	    - mv helmfile_linux_amd64 helmfile
	    - helmfile --version
	    # Install gomplate
	    - wget https://github.com/hairyhenderson/gomplate/releases/download/v3.1.0/gomplate_linux-amd64-slim
	    - chmod 764 $CONF_PATH_PREFIX/gomplate_linux-amd64-slim
	    - mv gomplate_linux-amd64-slim gomplate
	    - gomplate --version
	    # Install kubectl
        - sudo apt-get update && sudo sudo apt-get install -y apt-transport-https
	    - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
	    - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
	    - sudo apt-get update
        - sudo apt-get install -y kubectl
	    - kubectl version --client
	    # Install kubens
	    - wget https://raw.githubusercontent.com/ahmetb/kubectx/master/kubens
	    - chmod 764 $CONF_PATH_PREFIX/kubens
	    # Install helm
	    - wget https://get.helm.sh/helm-v2.16.3-linux-amd64.tar.gz
	    - tar -xzvf helm-v2.16.3-linux-amd64.tar.gz
	    - chmod 764 $CONF_PATH_PREFIX/linux-amd64/helm
	    - mv $CONF_PATH_PREFIX/linux-amd64/helm $CONF_PATH_PREFIX/
	    - helm version -c
	    # Install gcloud
	    - sudo apt-get install apt-transport-https ca-certificates gnupg
	    - echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
	    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
	    - sudo apt-get update && sudo apt-get install google-cloud-sdk
	    - gcloud version
      script: make test/gke/deploy/elk
    - stage: deploy
      if: tag IS present
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build -t "$TRAVIS_REPO_SLUG" .
      - docker images
      - docker tag "$TRAVIS_REPO_SLUG" "$TRAVIS_REPO_SLUG":latest
      - docker tag "$TRAVIS_REPO_SLUG" "$TRAVIS_REPO_SLUG":"${TRAVIS_TAG}"
      - docker push "$TRAVIS_REPO_SLUG"
