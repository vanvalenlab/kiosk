sudo: true
dist: xenial

git:
  depth: false

language: shell

services:
  - docker

stages:
  - unit_tests
  - integration_tests
  - deploy

env:
  - KUBERNETES_VERSION=1.14
  - KUBERNETES_VERSION=1.15

jobs:
  allow_failures:
    - name: "Integration test - ELK Enabled"
  fast_finish: true
  include:
    - stage: unit_tests
      name: "Unit Tests"
      install:
        - docker build -t kiosk .
        - docker run -d -it --env CLOUD_PROVIDER=gke --entrypoint=/bin/bash --name kiosk kiosk
      script:
        - docker exec kiosk make test/unit
        - docker kill kiosk && docker rm kiosk

    - stage: integration_tests
      name: "Integration Tests - ELK Disabled"
      if: ((type = pull_request AND branch = master) OR (commit_message =~ /\[build-integration-tests\]/))
      before_install:
        - openssl aes-256-cbc -K $encrypted_84460f9bb44c_key -iv $encrypted_84460f9bb44c_iv -in .travis/gcloud_key_base64.enc -out gcloud_key_base64 -d
        - cat gcloud_key_base64 | base64 --decode > gcloud_key.json
      install:
        - docker build -t kiosk .
        - >
          docker run -d -it
          --volume $(readlink -f gcloud_key.json):/tmp/keys/gcloud_key.json:ro
          --env CLOUD_PROVIDER=gke
          --env GCP_SERVICE_ACCOUNT=$GCP_SERVICE_ACCOUNT
          --env CLOUDSDK_CORE_PROJECT=$CLOUDSDK_CORE_PROJECT
          --env CLOUDSDK_BUCKET=$CLOUDSDK_BUCKET
          --env CLOUDSDK_COMPUTE_REGION=us-west1
          --env REGION_ZONES_WITH_GPUS=us-west1-a,us-west1-b
          --env KUBERNETES_VERSION=$KUBERNETES_VERSION
          --env GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/gcloud_key.json
          --entrypoint=/bin/bash
          --name kiosk kiosk
      script:
        - docker exec kiosk make test/integration/gke/deploy
        - docker kill kiosk && docker rm kiosk

    - stage: integration_tests
      name: "Integration test - ELK Enabled"
      if: ((type = pull_request AND branch = master) OR (commit_message =~ /\[build-integration-tests\]/)) AND (commit_message =~ /\[test-elk\]/)
      before_install:
        - openssl aes-256-cbc -K $encrypted_84460f9bb44c_key -iv $encrypted_84460f9bb44c_iv -in .travis/gcloud_key_base64.enc -out gcloud_key_base64 -d
        - cat gcloud_key_base64 | base64 --decode > gcloud_key.json
      install:
        - docker build -t kiosk .
        - >
          docker run -d -it
          --volume $(readlink -f gcloud_key.json):/tmp/keys/gcloud_key.json:ro
          --env CLOUD_PROVIDER=gke
          --env GCP_SERVICE_ACCOUNT=$GCP_SERVICE_ACCOUNT
          --env CLOUDSDK_CORE_PROJECT=$CLOUDSDK_CORE_PROJECT
          --env CLOUDSDK_BUCKET=$CLOUDSDK_BUCKET
          --env CLOUDSDK_COMPUTE_REGION=us-west1
          --env REGION_ZONES_WITH_GPUS=us-west1-a,us-west1-b
          --env KUBERNETES_VERSION=$KUBERNETES_VERSION
          --env GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/gcloud_key.json
          --entrypoint=/bin/bash
          --name kiosk kiosk
      script:
        - docker exec kiosk make test/integration/gke/deploy/elk
        - docker kill kiosk && docker rm kiosk

    - stage: deploy
      name: "Docker Deployment"
      if: tag IS present
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build -t "$TRAVIS_REPO_SLUG" .
      - docker images
      - docker tag "$TRAVIS_REPO_SLUG" "$TRAVIS_REPO_SLUG":latest
      - docker tag "$TRAVIS_REPO_SLUG" "$TRAVIS_REPO_SLUG":"${TRAVIS_TAG}"
      - docker push "$TRAVIS_REPO_SLUG"
