helmDefaults:
  wait: true
  timeout: 600
  force: true
  atomic: true
  cleanupOnFail: true

################################################################################
## Certificate Manager #########################################################
################################################################################

repositories:
  # Add the Jetstack Helm repository
  - name: jetstack
    url: "https://charts.jetstack.io"
    # Kubernetes incubator repo of helm charts
  - name: incubator
    url: https://charts.helm.sh/incubator

releases:

#
# References:
#   - https://github.com/cloudposse/charts/blob/master/incubator/nginx-ingress/values.yaml
#
- name: cert-manager
  namespace: cert-manager
  labels:
    chart: cert-manager
    repo: stable
    component: cert-manager
    namespace: cert-manager
    vendor: kubernetes
  chart: jetstack/cert-manager
  version: 1.1.0
  wait: true
  values:
    - installCRDs: true

      serviceAccount:
        annotations:
          iam.gke.io/gcp-service-account: dns01-solver@{{ env "CLOUDSDK_CORE_PROJECT" | default "project-not-found"}}.iam.gserviceaccount.com

      ingressShim:
        # Use "letsencrypt-prod" for production.
        defaultIssuerName: {{ env "CERTIFICATE_MANAGER_CLUSTER_ISSUER" | default "letsecrypt-staging" }}
        defaultIssuerKind: ClusterIssuer
        defaultIssuerGroup: cert-manager.io

#
# Certificate Issuers
- name: letsencrypt-cert-issuer
  namespace: cert-manager
  chart: incubator/raw
  atomic: true
  cleanupOnFail: true
  force: true
  values:
    - resources:

      - apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        metadata:
          name: letsencrypt-staging
        spec:
          acme:
            server: https://acme-staging-v02.api.letsencrypt.org/directory
            privateKeySecretRef:
              name: letsencrypt-staging
            solvers:
            - selector: {}
              dns01:
                cloudDNS:
                  project: {{ getenv "CLOUDSDK_CORE_PROJECT" | default "project-not-found" }}

      - apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        metadata:
          name: letsencrypt-prod
        spec:
          acme:
            server: https://acme-v02.api.letsencrypt.org/directory
            privateKeySecretRef:
              name: letsencrypt-prod
            solvers:
            - selector: {}
              dns01:
                cloudDNS:
                  project: {{ getenv "CLOUDSDK_CORE_PROJECT" | default "project-not-found" }}
