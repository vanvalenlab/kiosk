helmDefaults:
  wait: true
  timeout: 600
  force: true

releases:

################################################################################
## Benchmarking ################################################################
################################################################################

#
# References:
#   - [web address of Helm chart's YAML file]
#
- name: benchmarking
  namespace: deepcell
  labels:
    chart: benchmarking
    component: benchmarking
    namespace: deepcell
    vendor: vanvalenlab
    default: true
  chart: '{{ env "CHARTS_PATH" | default "/conf/charts" }}/benchmarking'
  version: 0.1.0
  values:
    - replicas: 0

      image:
        repository: vanvalenlab/kiosk-benchmarking
        tag: 0.2.4

      resources:
        requests:
          cpu: 250m
          memory: 128Mi

      env:
        JOB_TYPE: "segmentation"
        NUM_CYCLES: 1
        NUM_GPUS: '{{ env "GPU_NODE_MAX_SIZE" | default "MIA" }}'
        GRAFANA_USER: admin
        GRAFANA_PASSWORD: '{{ env "GRAFANA_PASSWORD" | default "prom-operator" }}'
        GRAFANA_HOST: prometheus-operator-grafana.monitoring.svc.cluster.local
        LOG_LEVEL: INFO
        SCALE: 1
        LABEL: ""
        API_HOST: '{{ env "CLUSTER_ADDRESS" | default "frontend" }}'
        FILE: zip100.zip
        COUNT: 100
        MODEL: NuclearSegmentation:0
        UPLOAD_PREFIX: uploads
        POSTPROCESS: deep_watershed
        PREPROCESS: ""
        START_DELAY: 0.5
        UPDATE_INTERVAL: 15
        MANAGER_REFRESH_RATE: 15
        EXPIRE_TIME: 3600
        CONCURRENT_REQUESTS_PER_HOST: 1
{{ if eq (env "CLOUD_PROVIDER" | default "gke") "gke" }}
        STORAGE_BUCKET: '{{ env "CLOUDSDK_BUCKET" | default "invalid-bucket" }}'
{{ else }}
        STORAGE_BUCKET: '{{ env "AWS_BUCKET" | default "invalid-bucket" }}'
{{ end }}
