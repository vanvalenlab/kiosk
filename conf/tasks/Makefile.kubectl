## Provision RBAC cluster role binding
kubectl/create/rbac:
	@echo " "
	@echo "Finalizing Kubernetes RBAC roles and bindings."
	@kubectl create clusterrolebinding add-on-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:default 2> /dev/null || \
		echo "Kubernetes RBAC binding is already under control. No changes made."
	@echo "Kubernetes RBAC roles creation and binding finished."
	@echo " "
	@echo " "

## Provision cluster autoscaler
kubectl/create/autoscaler:
	gomplate -f addons/cluster-autoscaler.yaml | kubectl apply -f -

## Provision cluster autoscaler
kubectl/create/nvidia-drivers:
	gomplate -f addons/nvidia-device-plugin.yaml | kubectl apply -f -

## Provision all extra resources with kubectl
kubectl/create/all: \
  kubectl/create/rbac \
  kubectl/create/autoscaler \
  kubectl/create/nvidia-drivers
	@echo "Kubectl provisioned"

## Display the cluster IP or URL
kubectl/display/ip: IP_VAR = $(shell sh -c "kubectl describe service --namespace=kube-system ingress-nginx-ingress-controller | grep 'LoadBalancer Ingress:' | sed 's/\([[:graph:]]\+[[:space:]]\+\)\+\([0-9.]\+\|[[:graph:]]\+amazon[[:graph:]]\+\)/\2/'")
kubectl/display/ip:
	@echo " "
	@echo " "
	@echo Cluster address: ${IP_VAR}
	@echo " "
	@echo " "
	@echo export CLUSTER_ADDRESS=${IP_VAR} > ./cluster_address

## Tear down prometheus-operator and it's CRDs
kubectl/destroy/prometheus/operator:
	@helm delete prometheus-operator --purge
	@kubectl delete crd prometheuses.monitoring.coreos.com
	@kubectl delete crd prometheusrules.monitoring.coreos.com
	@kubectl delete crd servicemonitors.monitoring.coreos.com
	@kubectl delete crd alertmanagers.monitoring.coreos.com
	# @kubectl delete crd podmonitors.monitoring.coreos.com

## Create horizontal pod autoscalers for all relevant deployments
kubectl/implement/autoscaling:
	@envsubst < patches/hpa.yaml  > patches/hpa_subbed.yaml
	@kubectl apply -f patches/hpa_subbed.yaml
	@kubens deepcell
