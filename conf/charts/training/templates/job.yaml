apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ template "chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  parallelism: {{ .Values.parallelism }}
  completions: 2147483647
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ template "name" . }}
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      restartPolicy: Never
      nodeSelector:
{{- range $name, $value := .Values.nodeSelector }}
{{- if not ( empty $value) }}
        {{ $name }}: {{ $value | quote }}
{{- end }}
{{- end }}
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "training_gpu"
        operator: "Equal"
        value: "yes"
        effect: "NoSchedule"
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          limits:
            nvidia.com/gpu: 1
        ports:
        - containerPort: {{ .Values.httpTargetPort }}
        env:
{{- range $name, $value := .Values.env }}
{{- if not ( empty $value) }}
        - name: {{ $name }}
          value: {{ $value | quote }}
{{- end }}
{{- end }}
{{- range $name, $value := .Values.secrets }}
{{- if not ( empty $value) }}
        - name: {{ $name }}
          valueFrom:
            secretKeyRef:
              name: {{ template "secretName" . }}
              key: {{ $name }}
{{- end }}
{{- end }}
